extends ui_layout
  
block content
  //-Change this URI to a CDN you are using for Photos
  -var cdn = "";
  .computer.only.tablet.only.four.wide.column 
    .ui.card
      .image
        img(src=cdn+'/profile_pictures/'+actor.profile.picture)
      .content
        a.header= actor.profile.name
        .meta="@"+actor.username
        .description=actor.profile.bio
        .description(style="margin-top: 5px;") 
          if actor.profile.location
            i.marker.icon
            span=actor.profile.location
      .two.ui.bottom.attached.icon.buttons
          button.ui.button.block(data-tooltip='Block User', data-position='bottom left', username=actor.username)
            i.ban.icon
          button.ui.button.report(data-tooltip='Report User', data-position='bottom right', username=actor.username)
            i.flag.icon

  .eight.wide.computer.ten.wide.tablet.sixteen.wide.mobile.column 
    each val in script
      .ui.fluid.card.dim(postID=val.id, state=val.state, type='actor', actor_un = val.actor.username, actor_name = val.actor.profile.name, actor_pic = val.actor.profile.picture)
          //- dimmer DIV for flagging
          .ui.dimmer.flag
            .content
              .center
                h2.ui.inverted.icon.header
                  i.red.flag.icon
                  |  You've flagged this!
                  h3.ui.inverted.header
                    span="The admins will review this post further. We are sorry you had this experience."
          .content
            .right.floated.time.meta= (user.createdAt.getTime() + val.time)
            a(href='/user/'+val.actor.username)     
              img.ui.avatar.image(src=cdn+"/profile_pictures/"+val.actor.profile.picture)
              span=val.actor.profile.name
          .img.post.image
            //img(src='/public/picture.svg', data-src="/post_pictures/"+val.picture, style="max-width:100%;width:100%;")
            img(src=cdn+"/post_pictures/"+val.picture, style="max-width:100%; width:100%;")
          .content
            .description=val.body
            .myTimer.hidden 0
          .three.ui.bottom.attached.icon.buttons
            .ui.reply.button(tabindex='0')
              i.reply.icon
              |  Reply
            .ui.flag.button(tabindex='0')
              i.flag.icon
              |  Flag
            .ui.labeled.button(tabindex='0')
              .ui.like.button(class=val.like? "red": null)
                i.heart.icon
                |  Like
              a.ui.basic.red.left.pointing.label.count=val.likes
          if val.comments.filter(comment => user.createdAt.getTime() + comment.time < Date.now()).length > 0
            .content
              .ui.comments
                each comment in val.comments
                  if (user.createdAt.getTime() + comment.time) < Date.now()
                    //- Comment is user-made
                    if comment.new_comment
                      .comment(commentID=comment.commentID)
                        a.avatar.image(href='/me')
                          if user.profile.picture
                            img(src='/user_post/'+user.profile.picture)
                          else
                            img(src=user.gravatar(60))
                        .content
                          a.author(href='/me')=user.profile.name || user.username || user.id
                          .metadata
                            span.date=(user.createdAt.getTime() + comment.time)
                            .rating
                              i.heart.icon(class=comment.liked ? "red" : null)
                              span.num=comment.likes
                              |  Likes
                          .text=comment.body
                          .actions
                            a.like.comment(class=comment.liked ? "red" : null ) !{comment.liked ? "Unlike" : "Like"}
                    //- Else this is a normal comment from the script
                    else
                      .comment(commentID=comment.id)
                        a.avatar(href='/user/'+comment.actor.username)                     
                          img(src=cdn+"/profile_pictures/"+comment.actor.profile.picture)
                        .content
                          a.author(href='/user/'+comment.actor.username)=comment.actor.profile.name
                          .metadata
                            span.date=(user.createdAt.getTime() + comment.time)
                            .rating
                              i.heart.icon(class=comment.liked ? "red" : null)
                              span.num=comment.likes
                              |  Likes
                          .text=comment.body
                          .actions
                            a.like.comment(class=comment.liked ? "red" : null ) !{comment.liked ? "Unlike" : "Like"}
                            a.flag.comment Flag
          .extra.content
            .ui.fluid.left.labeled.right.icon.input
              .ui.label
                if user.profile.picture
                  img.ui.avatar.image(src='/user_post/'+user.profile.picture, name=user.profile.name || user.username || user.id)
                else
                  img.ui.avatar.image(src=user.gravatar(60), name=user.profile.name || user.username || user.id)            
              input.newcomment(type='text', placeholder='Write a Comment')
              i.big.send.link.icon

  .ui.small.report.coupled.modal
    i.close.icon
    .header 
      i.flag.icon 
      |  Report This User
    .content
      form#reportform.ui.reply.form(action='/user', method='POST')
        input(type='hidden', name='_csrf', value=_csrf)
        input(type='hidden', name='reported', value=actor.username)
        .ui.form.large
          .grouped.fields
            label(for='report_issue') Help us understand the issue. What's the problem with this account?
            .field
              .ui.radio.checkbox
                input.hidden(type='radio', name='report_issue', value="interested", tabindex='0')
                label I'm not interested in this account.
            .field
              .ui.radio.checkbox
                input.hidden(type='radio', name='report_issue', value="spam",tabindex='0')
                label They are posting spam.
            .field
              .ui.radio.checkbox
                input.hidden(type='radio', name='report_issue', value="bully", tabindex='0')
                label They're being abusive or harmful.
            .field
              .ui.radio.checkbox
                input.hidden(type='radio', name='report_issue', value="hacked", tabindex='0')
                label Their account may be hacked.          
    .actions
      input.ui.green.button.disabled(type='submit', value='Submit', form='reportform')
  .ui.small.second.coupled.modal
    .header
      | Your Report Has Been Sent!
    .content
      .description
        p This user has been reported to the admins. Thank you for helping the community!
    .actions
      .ui.approve.green.button
        i.checkmark.icon
        | Continue
  .ui.small.basic.blocked.modal
    .ui.icon.header
      i.ban.icon
      | You Have Blocked This User
    .content
      p You will no longer receive posts from this user. You can choose to report this user or un-block them. 
    .actions
      .ui.left.floated.red.inverted.button
        i.flag.icon
        | Report User
      .ui.home.inverted.button
        i.home.icon
        | Go Back to Homepage
      .ui.green.ok.inverted.button
        i.undo.icon
        | Un-Block User
                     
block scripts
  script().
    const user = !{JSON.stringify(user)};
    var blocked = !{JSON.stringify(blocked)};
    var reported = !{JSON.stringify(reported)};
  script(src='/public/js/actor.js')
  script(src='/public/js/postFunctionalities.js')

block styles 
  style. 
    label {
      font-size: medium !important;
    }
    .grouped.fields .field{
      margin-left: 5px !important;
    }